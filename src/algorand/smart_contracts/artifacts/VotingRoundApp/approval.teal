#pragma version 8
intcblock 0 1 2 8
bytecblock 0x56 0x6f7074696f6e5f636f756e7473 0x 0x736e617073686f745f7075626c69635f6b6579 0x73746172745f74696d65 0x656e645f74696d65 0x6d657461646174615f697066735f636964 0x71756f72756d 0x068101
txn NumAppArgs
intc_0 // 0
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x4c9fc994 // "create(byte[],string,uint64,uint64,uint8[],uint64)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0xbec76d87 // "bootstrap()void"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xbcb15896 // "get_preconditions(byte[])(uint64,uint64,uint64,uint64)"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x0b77f71f // "vote(byte[],uint8[])void"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 7
txna ApplicationArgs 2
store 8
load 7
load 8
callsub vote_7
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub getpreconditions_6
store 6
pushbytes 0x151f7c75 // 0x151f7c75
load 6
concat
log
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub bootstrap_2
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
txna ApplicationArgs 1
store 0
txna ApplicationArgs 2
store 1
txna ApplicationArgs 3
btoi
store 2
txna ApplicationArgs 4
btoi
store 3
txna ApplicationArgs 5
store 4
txna ApplicationArgs 6
btoi
store 5
load 0
load 1
load 2
load 3
load 4
load 5
callsub create_1
intc_1 // 1
return
main_l10:
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_0
intc_1 // 1
return

// delete
delete_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// create
create_1:
proto 6 0
intc_0 // 0
frame_dig -4
frame_dig -3
<
// End time should be after start time
assert
frame_dig -3
global LatestTimestamp
>
// End time should be in the future
assert
intc_0 // 0
bytec_3 // "snapshot_public_key"
app_global_get_ex
store 10
store 9
load 10
!
assert
bytec_3 // "snapshot_public_key"
frame_dig -6
extract 2 0
app_global_put
intc_0 // 0
bytec 6 // "metadata_ipfs_cid"
app_global_get_ex
store 12
store 11
load 12
!
assert
bytec 6 // "metadata_ipfs_cid"
frame_dig -5
extract 2 0
app_global_put
intc_0 // 0
bytec 4 // "start_time"
app_global_get_ex
store 14
store 13
load 14
!
assert
bytec 4 // "start_time"
frame_dig -4
app_global_put
intc_0 // 0
bytec 5 // "end_time"
app_global_get_ex
store 16
store 15
load 16
!
assert
bytec 5 // "end_time"
frame_dig -3
app_global_put
intc_0 // 0
bytec 7 // "quorum"
app_global_get_ex
store 18
store 17
load 18
!
assert
bytec 7 // "quorum"
frame_dig -1
app_global_put
frame_dig -2
intc_0 // 0
extract_uint16
frame_bury 0
frame_dig 0
// option_counts should be non-empty
assert
intc_0 // 0
bytec_1 // "option_counts"
app_global_get_ex
store 20
store 19
load 20
!
assert
bytec_1 // "option_counts"
frame_dig -2
app_global_put
retsub

// bootstrap
bootstrap_2:
proto 0 0
bytec_2 // ""
intc_0 // 0
dupn 2
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_0 // "V"
box_len
store 22
store 21
load 22
!
// Already bootstrapped
assert
bytec_0 // "V"
bytec_1 // "option_counts"
app_global_get
frame_bury 0
intc_0 // 0
store 23
frame_dig 0
intc_0 // 0
extract_uint16
frame_bury 1
frame_dig 1
store 24
intc_0 // 0
store 25
bootstrap_2_l1:
load 25
load 24
<
bz bootstrap_2_l3
frame_dig 0
intc_1 // 1
load 25
*
intc_2 // 2
+
getbyte
frame_bury 2
load 23
frame_dig 2
+
store 23
load 25
intc_1 // 1
+
store 25
b bootstrap_2_l1
bootstrap_2_l3:
load 23
intc_3 // 8
*
box_create
pop
retsub

// allowed_to_vote
allowedtovote_3:
proto 1 1
pushint 2800 // 2800
pushint 10 // 10
+
store 26
allowedtovote_3_l1:
load 26
global OpcodeBudget
>
bz allowedtovote_3_l3
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
pushint 5 // DeleteApplication
itxn_field OnCompletion
bytec 8 // 0x068101
itxn_field ApprovalProgram
bytec 8 // 0x068101
itxn_field ClearStateProgram
itxn_submit
b allowedtovote_3_l1
allowedtovote_3_l3:
txn Sender
frame_dig -1
bytec_3 // "snapshot_public_key"
app_global_get
ed25519verify_bare
retsub

// voting_open
votingopen_4:
proto 0 1
bytec_0 // "V"
box_len
store 28
store 27
load 28
global LatestTimestamp
bytec 4 // "start_time"
app_global_get
>=
&&
global LatestTimestamp
bytec 5 // "end_time"
app_global_get
<
&&
retsub

// already_voted
alreadyvoted_5:
proto 0 1
txn Sender
global CreatorAddress
b==
retsub

// get_preconditions
getpreconditions_6:
proto 1 1
bytec_2 // ""
intc_0 // 0
dupn 5
bytec_2 // ""
dup
callsub votingopen_4
frame_bury 1
frame_dig -1
extract 2 0
callsub allowedtovote_3
frame_bury 2
callsub alreadyvoted_5
frame_bury 3
global LatestTimestamp
frame_bury 4
frame_dig 1
itob
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_bury 0
retsub

// vote
vote_7:
proto 2 0
bytec_2 // ""
intc_0 // 0
dupn 5
frame_dig -2
extract 2 0
callsub allowedtovote_3
// Not allowed to vote
assert
callsub votingopen_4
// Voting not open
assert
callsub alreadyvoted_5
!
// Already voted
assert
bytec_1 // "option_counts"
app_global_get
frame_bury 0
frame_dig 0
intc_0 // 0
extract_uint16
frame_bury 1
frame_dig 1
store 29
frame_dig -1
intc_0 // 0
extract_uint16
frame_bury 2
frame_dig 2
load 29
==
// Number of answers incorrect
assert
intc_0 // 0
store 30
intc_0 // 0
store 31
vote_7_l1:
load 31
load 29
<
bz vote_7_l3
frame_dig -1
intc_1 // 1
load 31
*
intc_2 // 2
+
getbyte
frame_bury 3
frame_dig 0
intc_1 // 1
load 31
*
intc_2 // 2
+
getbyte
frame_bury 5
frame_dig 3
frame_dig 5
<
// Answer ID invalid
assert
intc_3 // 8
load 30
frame_dig 3
+
*
store 32
bytec_0 // "V"
load 32
intc_3 // 8
box_extract
btoi
store 33
bytec_0 // "V"
load 32
load 33
intc_1 // 1
+
itob
box_replace
load 30
frame_dig 5
+
store 30
load 31
intc_1 // 1
+
store 31
b vote_7_l1
vote_7_l3:
retsub